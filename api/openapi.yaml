openapi: 3.0.2
info:
  title: >-
    RENNES METROPOLE - API 3D
  version: 1.0.0
  description: >-
    'TODO Description'
  contact:
    name: Rennes Metropole - Service Information GÃ©ographique
    email: sig@rennesmetropole.fr
    url: https://public.sig.rennesmetropole.fr/
  license:
    name: Licence ODbL 1.0
    url: https://opendatacommons.org/licenses/odbl/
  x-keywords:
    - geospatial
    - data
    - api
    - rennes metropole
    - 3D
    - CityGML
    - CityJSON
    - Open API Feature
    - OGC
tags:
  - name: Capabilities
    description: essential characteristics of this API
  - name: Data
    description: Data methods
paths:
  /:
    get:
      description: >-
        The landing page provides links to the API definition and the
        conformance statements for this API.
      operationId: getLandingPage
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/LandingPage'
        '500':
          $ref: '#/components/responses/500'
      summary: Landing page
      tags:
        - Capabilities
  /conformance:
    get:
      description: >-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      parameters:
        - $ref: '#/components/parameters/f'
      operationId: getConformanceDeclaration
      responses:
        '200':
          $ref: '#/components/responses/ConformanceDeclaration'
        '500':
          $ref: '#/components/responses/500'
      summary: API conformance definition
      tags:
        - Capabilities
  /collections:
    get:
      tags:
        - Capabilities
      summary: the feature collections in the dataset
      parameters:
        - $ref: '#/components/parameters/f'
      operationId: getCollections
      responses:
        '200':
          $ref: '#/components/responses/Collections'
        '500':
          $ref: '#/components/responses/500'
  /collections/buildings:
    get:
      tags:
        - Capabilities
      summary: describe the feature collection with id `buildings`
      operationId: describeBuildings
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/Collection'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /collections/buildings/items:
    get:
      tags:
        - Data
      summary: fetch buildings
      description: |-
        Fetch features of the feature collection with id `buildings`.

        Every feature in a dataset belongs to a collection. A dataset may
        consist of multiple feature collections. A feature collection is often a
        collection of features of a similar type, based on a common schema.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getBuildings
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/startIndex'
      responses:
        '200':
          $ref: '#/components/responses/Buildings'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /collections/buildings/items/{buildingID}:
    get:
      tags:
        - Data
      summary: fetch a single building from his id
      description: |-
        Fetch the feature with id `featureId` in the feature collection
        with id `batiments`.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getbuildingById
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/buildingID'
      responses:
        '200':
          $ref: '#/components/responses/Buildings'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /collections/raster/coverage/tiles:
    get:
      tags:
        - Data
      summary: fetch raster tile from bbox or insee code
      description: |-
        Fetch raster tile from bbox or insee code.
      operationId: getRaster
      parameters:
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/codeInsee'
      responses:
        '200':
          $ref: '#/components/responses/MapTile'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  parameters:
    f:
      description: >-
        The optional f parameter indicates the output format that the server
        shall provide as part of the response document.  The default format is JSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: application/json
        enum:
          - application/json
          - application/gml+xml;version=3.2
        type: string
      style: form
    bbox:
      name: bbox
      in: query
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: number
      style: form
      explode: true
    codeInsee:
      name: codeInsee
      in: query
      required: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
    startIndex:
      name: startIndex
      in: query
      required: false
      schema:
        type: integer
    buildingID:
      name: buildingID
      in: path
      description: local identifier of a building
      required: true
      schema:
        type: string
  schemas:
    collection:
      required:
        - id
        - links
      type: object
      properties:
        id:
          type: string
          description: identifier of the collection used, for example, in URIs
          example: address
        title:
          type: string
          description: human readable title of the collection
          example: address
        description:
          type: string
          description: a description of the features in the collection
          example: An address.
        links:
          type: array
          example:
            - href: http://data.example.com/buildings
              rel: item
            - href: http://example.com/concepts/buildings.html
              rel: describedBy
              type: text/html
          items:
            $ref: '#/components/schemas/link'
        itemType:
          type: string
          description: indicator about the type of the items in the collection (the default value is 'feature').
          default: feature
        crs:
          type: array
          description: the list of coordinate reference systems supported by the service
          example:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
            - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            type: string
            format: uri;
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    collections:
      required:
        - collections
        - links
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
        crs:
          type: array
          description: a list of CRS identifiers that are supported for more that one feature collection offered by the service
          example:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
            - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            type: string
            format: uri
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    landingPage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
          example: Buildings in Bonn
        description:
          type: string
        links:
          type: array
          items:
            $ref: "#/components/schemas/link"
    link:
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          example: http://data.example.com/buildings/123
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Trierer Strasse 70, 53115 Bonn
        length:
          type: integer
    exception:
      required:
        - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      description: 'Information about the exception: an error code plus an optional description.' 
    confClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
    Buildings: 
      type: object
      properties:
        type: 
          type: string
        version: 
          type: string
        CityObjects: 
          type: object
        transform: 
          type: object
          properties: 
            scale: 
              type: array
              items: 
                type: number
            translate: 
              type: array
              items: 
                type: number
        vertices: 
          type: array
          items: 
            type: array
            items: 
              type: integer
              format: int32
        appearance: 
          type: object
          properties: 
            textures: 
              type: array
              items: 
                type: object
                properties: 
                  type: 
                    type: string
                  image: 
                    type: string
                  wrapMode: 
                    type: string
                  textureType: 
                    type: string
                  borderColor: 
                    type: array
                    items: 
                      type: integer
                      format: int32
            vertices-texture: 
              type: array
              items: 
                type: array
                items: 
                  type: number
        metadata: 
          type: object
          properties: 
            referenceSystem: 
              type: string
            presentLoDs: 
              type: object
              properties: 
                2: 
                  type: integer
                  format: int32
  responses:
    MapTile:
      description: A map tile image returned as a response.
      content:
        image/tiff; application=geotiff:
          schema:
            type: string
            format: binary
    400:
      description: |-
        Invalid parameter response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string    
    404:
      description: |-
        Not found response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string    
    500:
      description: |-
        A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
    LandingPage:
      description: |-
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        and the Conformance declaration (path `/conformance`,
        link relation `conformance`).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
    ConformanceDeclaration:
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
          example:
            conformsTo:
              - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core'
              - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage'
              - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30'
              - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html'
              - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json'
        text/html:
          schema:
            type: string
    Collections:
      description: |-
        The feature collections shared by this API.

        The dataset is organized as one or more feature collections. This resource
        provides information about and access to the collections.

        The response contains the list of collections. For each collection, a link
        to the items in the collection (path `/collections/{collectionId}/items`,
        link relation `items`) as well as key information about the collection.
        This information includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
          example:
            links:
              - href: http://data.example.org/collections.json
                rel: self
                type: application/json
                title: this document
              - href: http://data.example.org/collections.html
                rel: alternate
                type: text/html
                title: this document as HTML
              - href: http://schemas.example.org/1.0/buildings.xsd
                rel: describedBy
                type: application/xml
                title: GML application schema for Acme Corporation building data
              - href: http://download.example.org/buildings.gpkg
                rel: enclosure
                type: application/geopackage+sqlite3
                title: Bulk download (GeoPackage)
                length: 472546
            collections:
              - id: buildings
                title: Buildings
                description: Buildings in the city of Bonn.
                links:
                  - href: http://data.example.org/collections/buildings/items
                    rel: items
                    type: application/geo+json
                    title: Buildings
                  - href: http://data.example.org/collections/buildings/items.html
                    rel: items
                    type: text/html
                    title: Buildings
                  - href: https://creativecommons.org/publicdomain/zero/1.0/
                    rel: license
                    type: text/html
                    title: CC0-1.0
                  - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                    rel: license
                    type: application/rdf+xml
                    title: CC0-1.0
        text/html:
          schema:
            type: string
    Collection:
      description: |-
        Information about the feature collection with id `collectionId`.

        The response contains a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`)
        as well as key information about the collection. This information
        includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection'
          example:
            id: buildings
            title: Buildings
            description: Buildings in the city of Bonn.
            links:
              - href: http://data.example.org/collections/buildings/items
                rel: items
                type: application/geo+json
                title: Buildings
              - href: http://data.example.org/collections/buildings/items.html
                rel: items
                type: text/html
                title: Buildings
              - href: https://creativecommons.org/publicdomain/zero/1.0/
                rel: license
                type: text/html
                title: CC0-1.0
              - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                rel: license
                type: application/rdf+xml
                title: CC0-1.0
        text/html:
          schema:
            type: string
    Buildings:
      description: |-
        Reponse au format CityJson
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Buildings'
        application/gml+xml;version=3.2:
          schema:
            type: object
          