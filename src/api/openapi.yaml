openapi: 3.0.2
info:
  contact:
    email: sig@rennesmetropole.fr
    name: Rennes Metropole - Service Information GÃ©ographique
    url: https://public.sig.rennesmetropole.fr/
  description: '''TODO Description'''
  license:
    name: Licence ODbL 1.0
    url: https://opendatacommons.org/licenses/odbl/
  title: RENNES METROPOLE - API 3D
  version: 1.0.0
  x-keywords:
  - geospatial
  - data
  - api
  - rennes metropole
  - 3D
  - CityGML
  - CityJSON
  - Open API Feature
  - OGC
servers:
  - url: https://api-3d.sig.rennesmetropole.fr
    description: Serveur de production
  - url: https://api3d.imfr.cgi.com/recette
    description: Serveur de recette
  - url: https://api3d.imfr.cgi.com/integration
    description: Serveur d'integration
  - url: /
    description: Serveur local
tags:
- description: essential characteristics of this API
  name: Capabilities
- description: Data methods
  name: Data
- description: Raster Data methods
  name: Coverage
paths:
  /:
    get:
      description: The landing page provides links to the API definition and the conformance
        statements for this API.
      operationId: getLandingPage
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
          description: |-
            The landing page provides links to the API definition
            (link relations `service-desc` and `service-doc`),
            and the Conformance declaration (path `/conformance`,
            link relation `conformance`).
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Landing page
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /conformance:
    get:
      description: A list of all conformance classes specified in a standard that
        the server conforms to.
      operationId: getConformanceDeclaration
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                conformsTo:
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
              schema:
                $ref: '#/components/schemas/confClasses'
            text/html:
              schema:
                type: string
          description: |-
            The URIs of all conformance classes supported by the server.

            To support "generic" clients that want to access multiple
            OGC API Features implementations - and not "just" a specific
            API / server, the server declares the conformance
            classes it implements and conforms to.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: API conformance definition
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections:
    get:
      operationId: getCollections
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                links:
                - href: http://data.example.org/collections.json
                  rel: self
                  type: application/json
                  title: this document
                - href: http://data.example.org/collections.html
                  rel: alternate
                  type: text/html
                  title: this document as HTML
                - href: http://schemas.example.org/1.0/buildings.xsd
                  rel: describedBy
                  type: application/xml
                  title: GML application schema for Acme Corporation building data
                - href: http://download.example.org/buildings.gpkg
                  rel: enclosure
                  type: application/geopackage+sqlite3
                  title: Bulk download (GeoPackage)
                  length: 472546
                collections:
                - id: buildings
                  title: Buildings
                  description: Buildings in the city of Bonn.
                  links:
                  - href: http://data.example.org/collections/buildings/items
                    rel: items
                    type: application/geo+json
                    title: Buildings
                  - href: http://data.example.org/collections/buildings/items.html
                    rel: items
                    type: text/html
                    title: Buildings
                  - href: https://creativecommons.org/publicdomain/zero/1.0/
                    rel: license
                    type: text/html
                    title: CC0-1.0
                  - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                    rel: license
                    type: application/rdf+xml
                    title: CC0-1.0
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
          description: |-
            The feature collections shared by this API.

            The dataset is organized as one or more feature collections. This resource
            provides information about and access to the collections.

            The response contains the list of collections. For each collection, a link
            to the items in the collection (path `/collections/{collectionId}/items`,
            link relation `items`) as well as key information about the collection.
            This information includes:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: the feature collections in the dataset
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections/buildings:
    get:
      operationId: describeBuildings
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: buildings
                title: Buildings
                description: Buildings in the city of Bonn.
                links:
                - href: http://data.example.org/collections/buildings/items
                  rel: items
                  type: application/geo+json
                  title: Buildings
                - href: http://data.example.org/collections/buildings/items.html
                  rel: items
                  type: text/html
                  title: Buildings
                - href: https://creativecommons.org/publicdomain/zero/1.0/
                  rel: license
                  type: text/html
                  title: CC0-1.0
                - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                  rel: license
                  type: application/rdf+xml
                  title: CC0-1.0
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
          description: |-
            Information about the feature collection with id `collectionId`.

            The response contains a link to the items in the collection
            (path `/collections/{collectionId}/items`, link relation `items`)
            as well as key information about the collection. This information
            includes:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: describe the feature collection with id `buildings`
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections/mnt2018:
    get:
      operationId: describeMnt2018
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: mnt2018
                title: Mnt2018
                description: Fetch mnt2018
                links:
                - href: http://data.example.org/collections/mnt2018/coverage
                  rel: items
                  type: image/tiff;application=geotiff
                  title: Mnt2018
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
          description: |-
            Information about the feature collection with id `collectionId`.

            The response contains a link to the items in the collection
            (path `/collections/{collectionId}/items`, link relation `items`)
            as well as key information about the collection. This information
            includes:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: describe the feature collection with id `mnt2018`
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections/buildings/items:
    get:
      description: |-
        Fetch features of the feature collection with id `buildings`.

        Every feature in a dataset belongs to a collection. A dataset may
        consist of multiple feature collections. A feature collection is often a
        collection of features of a similar type, based on a common schema.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getBuildings
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          #- application/zip
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnÃ©es xmin, ymin, xmax, ymax sÃ©parÃ©es par une virgule (Ex '1330000,7203000,1368000,7246000') 
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: texture
        required: false
        schema:
          default: oui
          enum:
          - oui
          - non
      responses:
        "200":
          content:
            application/zip:
              schema:
                type: object
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
          description: Cityjson or citygml file response. if textures = oui, a zip file containing textures and the cityjson or citygml file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Invalid parameter response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: fetch buildings
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /collections/buildings/items/{buildingID}:
    get:
      description: |-
        Fetch the feature with id `featureId` in the feature collection
        with id `batiments`.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getbuildingById
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - description: local identifier of a building
        explode: false
        in: path
        name: buildingID
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: texture
        required: false
        schema:
          default: oui
          enum:
          - oui
          - non
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
          description: Reponse au format CityJson
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: fetch a single building from his id
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /collections/added_building/items:
    get:
      description: |-
        Added buildings TODO
      operationId: getAddedBuildings
      parameters:
      - description: The f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          #- application/zip
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnÃ©es xmin, ymin, xmax, ymax sÃ©parÃ©es par une virgule (Ex '1330000,7203000,1368000,7246000') 
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: date
        required: false
        description: Recherche par date (De la date en parametre jusqu'a aujourd'hui. format :YYYY-MM-DD)
        schema:
          format: date
          type: string
        #format: date
        #example : "2022-01-01"
      responses:
        "200":
          content:
            # application/zip:
            #   schema:
            #     type: object
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
          description: Cityjson or citygml file response. No textures.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Invalid parameter response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: fetch buildings
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /collections/modified_building/items:
    get:
      description: |-
        Modified buildings TODO
      operationId: getModifiedBuildings
      parameters:
      - description: The f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          #- application/zip
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnÃ©es xmin, ymin, xmax, ymax sÃ©parÃ©es par une virgule (Ex '1330000,7203000,1368000,7246000') 
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: date
        required: false
        description: Recherche par date (De la date en parametre jusqu'a aujourd'hui. format :YYYY-MM-DD)
        schema:
          format: date
          type: string
        #format: date
        #example : "2022-01-01"
      responses:
        "200":
          content:
            # application/zip:
            #   schema:
            #     type: object
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
          description: Cityjson or citygml file response. No textures.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Invalid parameter response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: fetch buildings
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /collections/deleted_building/items:
    get:
      description: |-
        deleted buildings TODO
      operationId: getDeletedBuildings
      parameters:
      - explode: true
        in: query
        name: codeInsee
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: date
        required: false
        description: Recherche par date (De la date en parametre jusqu'a aujourd'hui. format :YYYY-MM-DD)
        schema:
          format: date
          type: string
        #format: date
        #example : "2022-01-01"
      responses:
        "200":
          content:
            # application/zip:
            #   schema:
            #     type: object
            application/json:
              schema:
                $ref: '#/components/schemas/Deleted_Buildings'
            # application/gml+xml;version=3.2:
            #   schema:
            #     type: object
          description: Json file response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Invalid parameter response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: fetch buildings
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /collections/vegetation/items:
    get:
      description: |-
        deleted vege TODO
      operationId: getVegetation
      parameters:
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnÃ©es xmin, ymin, xmax, ymax sÃ©parÃ©es par une virgule (Ex '1330000,7203000,1368000,7246000') 
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vegetation'
          description: Json file response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Invalid parameter response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: fetch buildings
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /collections/mnt2018/coverage:
    get:
      description: Fetch mnt raster tile from bbox or insee code.
      operationId: getRaster
      parameters:
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnÃ©es xmin, ymin, xmax, ymax sÃ©parÃ©es par une virgule (Ex '1330000,7203000,1368000,7246000') 
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/tiff; application=geotiff:
              schema:
                format: binary
                type: string
          description: A map tile image returned as a response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Invalid parameter response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: fetch raster tile from bbox or insee code
      tags:
      - Coverage
      x-eov-operation-handler: controllers/DataController
components:
  parameters:
    f:
      description: The optional f parameter indicates the output format that the server
        shall provide as part of the response document.  The default format is JSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: application/json
        enum:
        - application/json
        - application/gml+xml;version=3.2
        type: string
      style: form
    bbox:
      explode: true
      in: query
      name: bbox
      required: false
      description: coordonnÃ©es xmin, ymin, xmax, ymax sÃ©parÃ©es par une virgule (Ex '1330000,7203000,1368000,7246000') 
      schema:
        type: string
      allowReserved: true
    codeInsee:
      explode: true
      in: query
      name: codeInsee
      required: false
      schema:
        type: string
      style: form
    limit:
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    startIndex:
      explode: true
      in: query
      name: startIndex
      required: false
      schema:
        type: integer
      style: form
    buildingID:
      description: local identifier of a building
      explode: false
      in: path
      name: buildingID
      required: true
      schema:
        type: string
      style: simple
    date:
      description: date
      explode: false
      in: path
      name: date
      required: true
      schema:
        format: date
        type: string
      #example: "2020-01-01"
      style: simple

  responses:
    MapTile:
      content:
        image/tiff; application=geotiff:
          schema:
            format: binary
            type: string
      description: A map tile image returned as a response.
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: Invalid parameter response.
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: Not found response.
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: A server error occurred.
    LandingPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
      description: |-
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        and the Conformance declaration (path `/conformance`,
        link relation `conformance`).
    ConformanceDeclaration:
      content:
        application/json:
          example:
            conformsTo:
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
          schema:
            $ref: '#/components/schemas/confClasses'
        text/html:
          schema:
            type: string
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
    Collections:
      content:
        application/json:
          example:
            links:
            - href: http://data.example.org/collections.json
              rel: self
              type: application/json
              title: this document
            - href: http://data.example.org/collections.html
              rel: alternate
              type: text/html
              title: this document as HTML
            - href: http://schemas.example.org/1.0/buildings.xsd
              rel: describedBy
              type: application/xml
              title: GML application schema for Acme Corporation building data
            - href: http://download.example.org/buildings.gpkg
              rel: enclosure
              type: application/geopackage+sqlite3
              title: Bulk download (GeoPackage)
              length: 472546
            collections:
            - id: buildings
              title: Buildings
              description: Buildings in the city of Bonn.
              links:
              - href: http://data.example.org/collections/buildings/items
                rel: items
                type: application/geo+json
                title: Buildings
              - href: http://data.example.org/collections/buildings/items.html
                rel: items
                type: text/html
                title: Buildings
              - href: https://creativecommons.org/publicdomain/zero/1.0/
                rel: license
                type: text/html
                title: CC0-1.0
              - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                rel: license
                type: application/rdf+xml
                title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string
      description: |-
        The feature collections shared by this API.

        The dataset is organized as one or more feature collections. This resource
        provides information about and access to the collections.

        The response contains the list of collections. For each collection, a link
        to the items in the collection (path `/collections/{collectionId}/items`,
        link relation `items`) as well as key information about the collection.
        This information includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
    Collection:
      content:
        application/json:
          example:
            id: buildings
            title: Buildings
            description: Buildings in the city of Bonn.
            links:
            - href: http://data.example.org/collections/buildings/items
              rel: items
              type: application/geo+json
              title: Buildings
            - href: http://data.example.org/collections/buildings/items.html
              rel: items
              type: text/html
              title: Buildings
            - href: https://creativecommons.org/publicdomain/zero/1.0/
              rel: license
              type: text/html
              title: CC0-1.0
            - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
              rel: license
              type: application/rdf+xml
              title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collection'
        text/html:
          schema:
            type: string
      description: |-
        Information about the feature collection with id `collectionId`.

        The response contains a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`)
        as well as key information about the collection. This information
        includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
    Buildings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Buildings'
        application/gml+xml;version=3.2:
          schema:
            type: object
      description: Reponse au format CityJson
  schemas:
    collection:
      example:
        itemType: feature
        crs:
        - http://www.opengis.net/def/crs/OGC/1.3/CRS84
        - http://www.opengis.net/def/crs/EPSG/0/4326
        description: An address.
        links:
        - href: http://data.example.com/buildings
          rel: item
        - href: http://example.com/concepts/buildings.html
          rel: describedBy
          type: text/html
        id: address
        title: address
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          example: address
          type: string
        title:
          description: human readable title of the collection
          example: address
          type: string
        description:
          description: a description of the features in the collection
          example: An address.
          type: string
        links:
          example:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          items:
            $ref: '#/components/schemas/link'
          type: array
        itemType:
          default: feature
          description: indicator about the type of the items in the collection (the
            default value is 'feature').
          type: string
        crs:
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: the list of coordinate reference systems supported by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            format: uri;
            type: string
          type: array
      required:
      - id
      - links
      type: object
    collections:
      example:
        collections:
        - itemType: feature
          crs:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          description: An address.
          links:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          id: address
          title: address
        - itemType: feature
          crs:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          description: An address.
          links:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          id: address
          title: address
        crs:
        - http://www.opengis.net/def/crs/OGC/1.3/CRS84
        - http://www.opengis.net/def/crs/EPSG/0/4326
        links:
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
      properties:
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
        collections:
          items:
            $ref: '#/components/schemas/collection'
          type: array
        crs:
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: a list of CRS identifiers that are supported for more that
            one feature collection offered by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            format: uri
            type: string
          type: array
      required:
      - collections
      - links
      type: object
    landingPage:
      example:
        description: description
        links:
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        title: Buildings in Bonn
      properties:
        title:
          example: Buildings in Bonn
          type: string
        description:
          type: string
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
      - links
      type: object
    link:
      example:
        hreflang: en
        rel: alternate
        length: 0
        href: http://data.example.com/buildings/123
        type: application/json
        title: Trierer Strasse 70, 53115 Bonn
      properties:
        href:
          example: http://data.example.com/buildings/123
          type: string
        rel:
          example: alternate
          type: string
        type:
          example: application/json
          type: string
        hreflang:
          example: en
          type: string
        title:
          example: Trierer Strasse 70, 53115 Bonn
          type: string
        length:
          type: integer
      required:
      - href
      - rel
      type: object
    exception:
      description: 'Information about the exception: an error code plus an optional
        description.'
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      type: object
    confClasses:
      example:
        conformsTo:
        - conformsTo
        - conformsTo
      properties:
        conformsTo:
          items:
            type: string
          type: array
      required:
      - conformsTo
      type: object
    Buildings:
      example:
        transform:
          scale:
          - 0.8008281904610115
          - 0.8008281904610115
          translate:
          - 6.027456183070403
          - 6.027456183070403
        metadata:
          presentLoDs:
            "2": 2
          referenceSystem: referenceSystem
        appearance:
          textures:
          - image: image
            borderColor:
            - 5
            - 5
            wrapMode: wrapMode
            textureType: textureType
            type: type
          - image: image
            borderColor:
            - 5
            - 5
            wrapMode: wrapMode
            textureType: textureType
            type: type
          vertices-texture:
          - - 5.637376656633329
            - 5.637376656633329
          - - 5.637376656633329
            - 5.637376656633329
        vertices:
        - - 1
          - 1
        - - 1
          - 1
        type: type
        version: version
        CityObjects: '{}'
      properties:
        type:
          type: string
        version:
          type: string
        CityObjects:
          type: object
        transform:
          $ref: '#/components/schemas/Buildings_transform'
        vertices:
          items:
            items:
              format: int32
              type: integer
            type: array
          type: array
        appearance:
          $ref: '#/components/schemas/Buildings_appearance'
        metadata:
          $ref: '#/components/schemas/Buildings_metadata'
      type: object
    Buildings_transform:
      example:
        scale:
        - 0.8008281904610115
        - 0.8008281904610115
        translate:
        - 6.027456183070403
        - 6.027456183070403
      properties:
        scale:
          items:
            type: number
          type: array
        translate:
          items:
            type: number
          type: array
      type: object
    Buildings_appearance_textures:
      example:
        image: image
        borderColor:
        - 5
        - 5
        wrapMode: wrapMode
        textureType: textureType
        type: type
      properties:
        type:
          type: string
        image:
          type: string
        wrapMode:
          type: string
        textureType:
          type: string
        borderColor:
          items:
            format: int32
            type: integer
          type: array
      type: object
    Buildings_appearance:
      example:
        textures:
        - image: image
          borderColor:
          - 5
          - 5
          wrapMode: wrapMode
          textureType: textureType
          type: type
        - image: image
          borderColor:
          - 5
          - 5
          wrapMode: wrapMode
          textureType: textureType
          type: type
        vertices-texture:
        - - 5.637376656633329
          - 5.637376656633329
        - - 5.637376656633329
          - 5.637376656633329
      properties:
        textures:
          items:
            $ref: '#/components/schemas/Buildings_appearance_textures'
          type: array
        vertices-texture:
          items:
            items:
              type: number
            type: array
          type: array
      type: object
    Buildings_metadata_presentLoDs:
      example:
        "2": 2
      properties:
        "2":
          format: int32
          type: integer
      type: object
    Buildings_metadata:
      example:
        presentLoDs:
          "2": 2
        referenceSystem: referenceSystem
      properties:
        referenceSystem:
          type: string
        presentLoDs:
          $ref: '#/components/schemas/Buildings_metadata_presentLoDs'
      type: object
    Deleted_Buildings:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
      example:
      - id: '350001_050218'
        date: '2022-08-03'
      - id: '350001_050344'
        date: '2022-08-02'
    Vegetation:
      example:
        type: FeatureCollection
        feature:
          type: Feature
          id: arbres.6145
          geometry:
            type: Point
            coordinantes:
              -1360553.054598
              -7228097.547001
          geometry_name: geom
          properties:
            id: 6145
            type: 1
            facteur: "12.55496 12.55496 24.01666"
            orientation: 45
            altitude: 83.7
          bbox:
            -1360553.054598
            -7228097.547001
            -1360553.054598
            -7228097.547001
        totalFeatures: 2448284
        numberMatched: 2448284
        numberReturned: 1
        timeStamp: "2022-10-07T10:06:24.001Z"
        crs:
          type: name
          properties:
            name: "urn:ogc:def:crs:EPSG::3948"
        bbox: 
          -1360553.054598
          -7228060.155101
          -1360678.159198
          -7228097.547001


