openapi: 3.0.2
info:
  contact:
    email: sig@rennesmetropole.fr
    name: Rennes Metropole - Service Information GÃ©ographique
    url: https://public.sig.rennesmetropole.fr/
  description: '''TODO Description'''
  license:
    name: Licence ODbL 1.0
    url: https://opendatacommons.org/licenses/odbl/
  title: RENNES METROPOLE - API 3D
  version: 1.0.0
  x-keywords:
  - geospatial
  - data
  - api
  - rennes metropole
  - 3D
  - CityGML
  - CityJSON
  - Open API Feature
  - OGC
servers:
- url: /
tags:
- description: essential characteristics of this API
  name: Capabilities
- description: access to data (features)
  name: Data
paths:
  /:
    get:
      description: The landing page provides links to the API definition and the conformance
        statements for this API.
      operationId: getLandingPage
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - application/json
          - text/html
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
          description: |-
            The landing page provides links to the API definition
            (link relations `service-desc` and `service-doc`),
            and the Conformance declaration (path `/conformance`,
            link relation `conformance`).
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: Landing page
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /conformance:
    get:
      description: A list of all conformance classes specified in a standard that
        the server conforms to.
      operationId: getConformanceDeclaration
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - application/json
          - text/html
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                conformsTo:
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
              schema:
                $ref: '#/components/schemas/confClasses'
            text/html:
              schema:
                type: string
          description: |-
            The URIs of all conformance classes supported by the server.

            To support "generic" clients that want to access multiple
            OGC API Features implementations - and not "just" a specific
            API / server, the server declares the conformance
            classes it implements and conforms to.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: API conformance definition
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections:
    get:
      operationId: getCollections
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - application/json
          - text/html
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                links:
                - href: http://data.example.org/collections.json
                  rel: self
                  type: application/json
                  title: this document
                - href: http://data.example.org/collections.html
                  rel: alternate
                  type: text/html
                  title: this document as HTML
                - href: http://schemas.example.org/1.0/buildings.xsd
                  rel: describedBy
                  type: application/xml
                  title: GML application schema for Acme Corporation building data
                - href: http://download.example.org/buildings.gpkg
                  rel: enclosure
                  type: application/geopackage+sqlite3
                  title: Bulk download (GeoPackage)
                  length: 472546
                collections:
                - id: buildings
                  title: Buildings
                  description: Buildings in the city of Bonn.
                  extent:
                    spatial:
                      bbox:
                      - - 7.01
                        - 50.63
                        - 7.22
                        - 50.78
                    temporal:
                      interval:
                      - - 2010-02-15T12:34:56Z
                        - null
                  links:
                  - href: http://data.example.org/collections/buildings/items
                    rel: items
                    type: application/geo+json
                    title: Buildings
                  - href: http://data.example.org/collections/buildings/items.html
                    rel: items
                    type: text/html
                    title: Buildings
                  - href: https://creativecommons.org/publicdomain/zero/1.0/
                    rel: license
                    type: text/html
                    title: CC0-1.0
                  - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                    rel: license
                    type: application/rdf+xml
                    title: CC0-1.0
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
          description: |-
            The feature collections shared by this API.

            The dataset is organized as one or more feature collections. This resource
            provides information about and access to the collections.

            The response contains the list of collections. For each collection, a link
            to the items in the collection (path `/collections/{collectionId}/items`,
            link relation `items`) as well as key information about the collection.
            This information includes:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: the feature collections in the dataset
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections/{collectionId}:
    get:
      operationId: describeCollection
      parameters:
      - description: The optional f parameter indicates the output format that the
          server shall provide as part of the response document.  The default format
          is JSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - application/json
          - text/html
          type: string
        style: form
      - description: local identifier of a collection
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          enum:
          - test
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: buildings
                title: Buildings
                description: Buildings in the city of Bonn.
                extent:
                  spatial:
                    bbox:
                    - - 7.01
                      - 50.63
                      - 7.22
                      - 50.78
                  temporal:
                    interval:
                    - - 2010-02-15T12:34:56Z
                      - null
                links:
                - href: http://data.example.org/collections/buildings/items
                  rel: items
                  type: application/geo+json
                  title: Buildings
                - href: http://data.example.org/collections/buildings/items.html
                  rel: items
                  type: text/html
                  title: Buildings
                - href: https://creativecommons.org/publicdomain/zero/1.0/
                  rel: license
                  type: text/html
                  title: CC0-1.0
                - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                  rel: license
                  type: application/rdf+xml
                  title: CC0-1.0
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
          description: |-
            Information about the feature collection with id `collectionId`.

            The response contains a link to the items in the collection
            (path `/collections/{collectionId}/items`, link relation `items`)
            as well as key information about the collection. This information
            includes:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
        "404":
          description: The requested URI was not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
      summary: describe the feature collection with id `collectionId`
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /raster/elevation/commune/{code_insee}:
    get:
      description: TODO Description
      operationId: rasterElevationCommuneCodeInseeGET
      parameters:
      - explode: false
        in: path
        name: code_insee
        required: true
        schema:
          example: "35238"
          maximum: 1
          minimum: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            image/tiff:
              schema:
                format: binary
                type: string
          description: image de retour
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
      summary: Terrain en raster d'Ã©lÃ©vation non texturÃ©
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /raster/elevation/bbox/:
    get:
      description: TODO Description
      operationId: rasterElevationBboxGET
      parameters:
      - explode: false
        in: query
        name: bbox
        required: false
        schema:
          items:
            type: number
          maxItems: 6
          minItems: 4
          type: array
        style: form
      responses:
        "200":
          content:
            image/tiff:
              schema:
                format: binary
                type: string
          description: image de retour
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
      summary: Terrain en raster d'Ã©lÃ©vation non texturÃ©
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /batiments/:
    get:
      description: TODO Description
      operationId: batimentsGET
      parameters:
      - explode: false
        in: query
        name: bbox
        required: false
        schema:
          items:
            type: number
          maxItems: 6
          minItems: 4
          type: array
        style: form
      - allowEmptyValue: false
        explode: true
        in: query
        name: texture
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: header
        name: format
        required: false
        schema:
          enum:
          - cityJSON
          - CityGML
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
      summary: Maquette blanche en accÃ¨s direct (cityJSON, cityGML) sur Bbox
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /batiments/commune/{code_insee}:
    get:
      description: TODO Description
      operationId: batimentsCommuneCodeInseeGET
      parameters:
      - explode: false
        in: path
        name: code_insee
        required: true
        schema:
          example: "35238"
          maximum: 1
          minimum: 1
          type: string
        style: simple
      - allowEmptyValue: false
        explode: true
        in: query
        name: texture
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: header
        name: format
        required: false
        schema:
          enum:
          - cityJSON
          - CityGML
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
      summary: Maquette blanche en accÃ¨s direct (cityJSON, cityGML) sur code insee
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
  /batiments/batiment/{id}:
    get:
      description: TODO Description
      operationId: batimentsBatimentIdGET
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: false
        explode: true
        in: query
        name: texture
        required: true
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: header
        name: format
        required: false
        schema:
          enum:
          - cityJSON
          - CityGML
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Not found response.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: A server error occurred.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: General HTTP error response.
      summary: Maquette blanche en accÃ¨s direct (cityJSON, cityGML) sur id de batiment
      tags:
      - Data
      x-eov-operation-handler: controllers/DataController
components:
  parameters:
    f:
      description: The optional f parameter indicates the output format that the server
        shall provide as part of the response document.  The default format is JSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
        - application/json
        - text/html
        type: string
      style: form
    bbox:
      explode: false
      in: query
      name: bbox
      required: false
      schema:
        items:
          type: number
        maxItems: 6
        minItems: 4
        type: array
      style: form
    collectionId:
      description: local identifier of a collection
      explode: false
      in: path
      name: collectionId
      required: true
      schema:
        enum:
        - test
        type: string
      style: simple
  responses:
    "200":
      description: successful operation
    wms:
      content:
        image/tiff:
          schema:
            format: binary
            type: string
      description: image de retour
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: General HTTP error response.
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: Not found response.
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: A server error occurred.
    NotFound:
      description: The requested URI was not found.
    ServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: A server error occurred.
    LandingPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
      description: |-
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        and the Conformance declaration (path `/conformance`,
        link relation `conformance`).
    ConformanceDeclaration:
      content:
        application/json:
          example:
            conformsTo:
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
          schema:
            $ref: '#/components/schemas/confClasses'
        text/html:
          schema:
            type: string
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
    Collections:
      content:
        application/json:
          example:
            links:
            - href: http://data.example.org/collections.json
              rel: self
              type: application/json
              title: this document
            - href: http://data.example.org/collections.html
              rel: alternate
              type: text/html
              title: this document as HTML
            - href: http://schemas.example.org/1.0/buildings.xsd
              rel: describedBy
              type: application/xml
              title: GML application schema for Acme Corporation building data
            - href: http://download.example.org/buildings.gpkg
              rel: enclosure
              type: application/geopackage+sqlite3
              title: Bulk download (GeoPackage)
              length: 472546
            collections:
            - id: buildings
              title: Buildings
              description: Buildings in the city of Bonn.
              extent:
                spatial:
                  bbox:
                  - - 7.01
                    - 50.63
                    - 7.22
                    - 50.78
                temporal:
                  interval:
                  - - 2010-02-15T12:34:56Z
                    - null
              links:
              - href: http://data.example.org/collections/buildings/items
                rel: items
                type: application/geo+json
                title: Buildings
              - href: http://data.example.org/collections/buildings/items.html
                rel: items
                type: text/html
                title: Buildings
              - href: https://creativecommons.org/publicdomain/zero/1.0/
                rel: license
                type: text/html
                title: CC0-1.0
              - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                rel: license
                type: application/rdf+xml
                title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string
      description: |-
        The feature collections shared by this API.

        The dataset is organized as one or more feature collections. This resource
        provides information about and access to the collections.

        The response contains the list of collections. For each collection, a link
        to the items in the collection (path `/collections/{collectionId}/items`,
        link relation `items`) as well as key information about the collection.
        This information includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
    Collection:
      content:
        application/json:
          example:
            id: buildings
            title: Buildings
            description: Buildings in the city of Bonn.
            extent:
              spatial:
                bbox:
                - - 7.01
                  - 50.63
                  - 7.22
                  - 50.78
              temporal:
                interval:
                - - 2010-02-15T12:34:56Z
                  - null
            links:
            - href: http://data.example.org/collections/buildings/items
              rel: items
              type: application/geo+json
              title: Buildings
            - href: http://data.example.org/collections/buildings/items.html
              rel: items
              type: text/html
              title: Buildings
            - href: https://creativecommons.org/publicdomain/zero/1.0/
              rel: license
              type: text/html
              title: CC0-1.0
            - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
              rel: license
              type: application/rdf+xml
              title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collection'
        text/html:
          schema:
            type: string
      description: |-
        Information about the feature collection with id `collectionId`.

        The response contains a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`)
        as well as key information about the collection. This information
        includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
  schemas:
    collection:
      example:
        itemType: feature
        crs:
        - http://www.opengis.net/def/crs/OGC/1.3/CRS84
        - http://www.opengis.net/def/crs/EPSG/0/4326
        description: An address.
        links:
        - href: http://data.example.com/buildings
          rel: item
        - href: http://example.com/concepts/buildings.html
          rel: describedBy
          type: text/html
        id: address
        title: address
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          example: address
          type: string
        title:
          description: human readable title of the collection
          example: address
          type: string
        description:
          description: a description of the features in the collection
          example: An address.
          type: string
        links:
          example:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          items:
            $ref: '#/components/schemas/link'
          type: array
        itemType:
          default: feature
          description: indicator about the type of the items in the collection (the
            default value is 'feature').
          type: string
        crs:
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: the list of coordinate reference systems supported by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            format: uri;
            type: string
          type: array
      required:
      - id
      - links
      type: object
    collections:
      example:
        collections:
        - itemType: feature
          crs:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          description: An address.
          links:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          id: address
          title: address
        - itemType: feature
          crs:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          description: An address.
          links:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          id: address
          title: address
        crs:
        - http://www.opengis.net/def/crs/OGC/1.3/CRS84
        - http://www.opengis.net/def/crs/EPSG/0/4326
        links:
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
      properties:
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
        collections:
          items:
            $ref: '#/components/schemas/collection'
          type: array
        crs:
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: a list of CRS identifiers that are supported for more that
            one feature collection offered by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            format: uri
            type: string
          type: array
      required:
      - collections
      - links
      type: object
    landingPage:
      example:
        description: description
        links:
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        title: Buildings in Bonn
      properties:
        title:
          example: Buildings in Bonn
          type: string
        description:
          type: string
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
      - links
      type: object
    link:
      example:
        hreflang: en
        rel: alternate
        length: 0
        href: http://data.example.com/buildings/123
        type: application/json
        title: Trierer Strasse 70, 53115 Bonn
      properties:
        href:
          example: http://data.example.com/buildings/123
          type: string
        rel:
          example: alternate
          type: string
        type:
          example: application/json
          type: string
        hreflang:
          example: en
          type: string
        title:
          example: Trierer Strasse 70, 53115 Bonn
          type: string
        length:
          type: integer
      required:
      - href
      - rel
      type: object
    exception:
      description: 'Information about the exception: an error code plus an optional
        description.'
      example:
        code: code
        description: description
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      type: object
    confClasses:
      example:
        conformsTo:
        - conformsTo
        - conformsTo
      properties:
        conformsTo:
          items:
            type: string
          type: array
      required:
      - conformsTo
      type: object
