openapi: 3.0.2
info:
  title: RENNES METROPOLE - API 3D REST
  description: <p>L'API 3D permet un accès en flux aux données 3D produites par Rennes Métropole couvrant son territoire. </p>
    <p>
    La <b>base de données des bâtiments 3D</b> est constituée du socle millésimé et des ajustements de bâtiments. Le socle est mis à jour tous les trois ans. Les ajustements (destructions, modifications, ajouts) sont effectués pendant la période d'exploitation du millésime et ne bénéficient pas, eux, de texture.
    </p>
    
    <p>
    Les <b>données de végétation</b> et de <b>mobilier urbains</b> peuvent servir à enrichir des expériences de visualisations construites sur la base des bâtiments 3D. Toutefois, ces données sont théoriques et ne correspondent pas exactement à la réalité. Ces couches de données ponctuelles nécessitent un travail de représentation à l'aide des catalogues disponibles sur la page <a target="_blank" href="https://api-3d.sig.rennesmetropole.fr"> des fichiers téléchargeables</a>.
    </p>
    
    <p>
    Le <b>Modèle Numérique de Terrain (MNT)</b> permet de connaître l'altitude du terrain à un endroit donné. Cette donnée raster en niveaux de gris permet de reconstruire un modèle 3D du terrain.
    </p>

    <p>Le système de coordonnées utilisé par cette API (résultats et paramètres) est <strong>EPSG:3948</strong>. </p>
    
    <p>Cette API nécessite une authentification.
    <ul><li>Une clé publique ApiKeyAuth est mise à disposition et peut être utilisée librement. Tous les utilisateurs de cette clé partagent les mêmes accès aux données. Leurs demandes peuvent se voir mises en attente en cas d'un usage massif simultané de la clé. La clé partagée est récupérable dans la fenêtre d'authentification swagger. 
    <li>Les grands consommateurs de l'API peuvent contacter le service SIG de Rennes Métropole pour demander une clé d'api dédiée ou un compte OAuth2 (identification d'application cliente) pour disposer d'un accès indépendant aux données (selon les contraintes imposées).
    </ul></p>
    <p>Cette API se veut conforme au standard OGC API - Features v1.0.0 et au standard OGC API - Coverage (draft). </p>
    <p> <strong><i>Attention, l'utilisation de l'API REST est modifiée depuis septembre 2023. Les urls d'accès ont changé et il est désormais indispensable de s'authentifier pour l'utiliser.</i></strong></p>
  contact:
    name: Rennes Metropole - Service Information Géographique
    url: https://public.sig.rennesmetropole.fr/
    email: sig@rennesmetropole.fr
  license:
    name: Licence ODbL 1.0
    url: https://opendatacommons.org/licenses/odbl/
  version: 1.0.0
  x-keywords:
  - geospatial
  - data
  - api
  - rennes metropole
  - 3D
  - CityGML
  - CityJSON
  - Open API Feature
  - OGC
servers:
  - url: https://api.rennesmetropole.fr/3d/v1/
    description: Serveur de production
security:
  - ApiKeyAuth: []
tags:
- description: Propriétés générales de l'API
  name: Capabilities
- description: Accès aux données
  name: Data
- description: Accès aux données de type raster
  name: Coverage
paths:
  /:
    get:
      description: Page d'accueil proposant une description de l'API.
      operationId: getLandingPage
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
          description: |-
            La page d'accueil fournit des liens vers les définitions de l'API (relations `service-desc` et `service-doc`) et les déclaration de conformité (chemin `/conformance`, relation `conformance`).
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Page d'accueil
      tags:
      - Capabilities
  /conformance:
    get:
      description: Liste des standards auxquels l'API est conforme.
      operationId: getConformanceDeclaration
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                conformsTo:
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
              schema:
                $ref: '#/components/schemas/confClasses'
            text/html:
              schema:
                type: string
          description: |-
            Les URIs des classes des standards supportés par le serveur.
            Déclarations de conformités du serveur aux standards qu'il implémente dans le but de se rendre au mieux interopérable par le standard OGC API Features.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Déclaration des conformités aux standards
      tags:
      - Capabilities
  /collections:
    get:
      operationId: getCollections
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                links:
                - href: /collections?f=application%2Fjson
                  rel: data
                  type: application/json
                  title: The JSON representation of the list of all data collections served from this endpoint
                collections:
                - id: buildings
                  title: Buildings
                  description: Fetch buildings.
                  links:
                  - href: /collections/buildings?f=application%2Fjson
                    rel: http://www.opengis.net/def/rel/ogc/1.0/collection
                    type: application/json
                    title: Buildings
                  - href: /collections/buildings?f=application%2Fgml%2Bxml%3Bversion%3D3.2
                    rel: http://www.opengis.net/def/rel/ogc/1.0/collection
                    type: application/gml+xml;version=3.2
                    title: Buildings
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
          description: |-
            Description des jeux de données accessibles par cette API.

            Cette route permet d'obtenir les informations et les méthodes d'accès aux différents jeux de données (collection) fournies par l'API.
            La réponse présente une liste de jeux de données et pour chacun, leur description et leurs liens d'accès (chemin `/collections/{collectionId}/items`,
            liens de relation `items`).
            Cette information comprend : 
            * L'identifiant (id) du jeu de données qui est unique dans le catalogue;
            * Le titre (title) du jeu de données
            * Une description (description) du jeu de données
            * Le format de sortie (type)
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Description des jeux de données 
      tags:
      - Capabilities
  /collections/buildings:
    get:
      operationId: describeBuildings
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: buildings
                title: Buildings
                description: Fetch buildings.
                links:
                - href: /collections/buildings?f=application%2Fjson
                  rel: http://www.opengis.net/def/rel/ogc/1.0/collection
                  type: application/json
                  title: Buildings
                - href: /collections/buildings?f=application%2Fgml%2Bxml%3Bversion%3D3.2
                  rel: http://www.opengis.net/def/rel/ogc/1.0/collection
                  type: application/gml+xml;version=3.2
                  title: Buildings
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
          description: |-
            Description du jeu de données `buildings`.

            Cette route permet d'obtenir les informations dont le système de coordonnées de référence (SCR) et les méthodes d'accès aux données du jeu de données (collection) 'Buildings'.
            La réponse présente la liste des points d'accès au jeu de données et pour chacun, sa description et son lien d'accès (chemin `/collections/{collectionId}/items`).

            Cette information comprend : 
            * Le titre (title) du point d'entrée de données
            * Le lien d'accès au point d'entrée (href)
            * la classe de relation (rel) du point d'entrée
            * Le format de sortie (type)
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Description du jeu de données `buildings`
      tags:
      - Capabilities
  /collections/mnt2018:
    get:
      operationId: describeMnt2018
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: mnt2018
                title: Modèle Numérique de Terrain (MNT) 2018
                description: Fetch mnt2018
                links:
                - href: /collections/mnt2018/coverage
                  rel: http://www.opengis.net/def/rel/ogc/1.0/coverage
                  type: image/tiff;application=geotiff
                  title: mnt2018
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
          description: |-
            Description du jeu de données `mnt2018`.

            Cette route permet d'obtenir les informations dont le système de coordonnées de référence (SCR) et les méthodes d'accès aux données du jeu de données (collection) 'mnt2018'.
            La réponse présente la liste des points d'accès au jeu de données et pour chacun, sa description et son lien d'accès (chemin `/collections/{collectionId}/items`).

            Cette information comprend : 
            * Le titre (title) du point d'entrée de données
            * Le lien d'accès au point d'entrée (href)
            * la classe de relation (rel) du point d'entrée
            * Le format de sortie (type)
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Description du jeu de données `mnt2018`
      tags:
      - Capabilities
  /collections/buildings/items:
    get:
      description: |-
        Le jeu de données `buildings` représente les bâtiments 3D.
        Les bâtiments existent sur toutes les communes du territoire métropolitain. Il est possible de les obtenir avec ou sans texture.
        Il est nécessaire de préciser un périmètre géographique (BBOX de moins de 10km² ou code insee d'une commune).
        
        <b><u>Attention</u></b>, la recherche des batiments texturés sur de larges territoires peut réduire les performances de l'API. Dans ce cas, le format CityJSON et la réduction de la superficie observée sont recommandés.
        
        <b><u>Attention</u></b>, en cas d'export très lourd, un fichier téléchargeable sera créé et une URL temporaire de téléchargement sera fournie en résultat de l'appel à l'API.
      operationId: getBuildings
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          #- application/zip
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnées xmin, ymin, xmax, ymax d'une BBOX séparées par une virgule. Limite de superficie de 10km². (Ex '1330000,7203000,1368000,7246000').  
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        description: code insee d'une commune de Rennes Métropole. 
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        description: Limite du nombre de résultats.
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: texture
        required: true
        schema:
          default: oui
          enum:
          - oui
          - non
      produces:
        - application/zip
        - application/json
        - application/gml+xml;version=3.2
      responses:
        "200":
          content:
            application/zip:
              schema:
                type: file
                format: binary
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
                format: binary
          description: Données CityJSON ou CityGML. Si les textures sont demandées, le fichier compressé retourné contient le modèle 3D et les textures des bâtiments.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Paramètre incorrect.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention des données 3D bâtiments
      tags:
      - Data
  /collections/buildings/items/{buildingID}:
    get:
      description: |-
        Récupération des données 3D d'un bâtiment à partir de son identifiant. Il est possible de l'obtenir avec ou sans texture. 
      operationId: getbuildingById
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - description: Identifiant du bâtiment
        explode: false
        in: path
        name: buildingID
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: texture
        required: true
        schema:
          default: oui
          enum:
          - oui
          - non
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
          description: Données CityJSON ou CityGML. Si les textures sont demandées le fichier compressé retourné contient le modèle 3D et les textures du bâtiment.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention des données 3D d'un bâtiment à partir de son identifiant.
      tags:
      - Data
  /collections/added_building/items:
    get:
      description: |-
        Récupération des données 3D des bâtiments ajoutés depuis le dernier millésime du socle 3D. 
        Ces bâtiments ne disposent pas de texture. 
        Il est possible d'obtenir les bâtiments nouveaux depuis une date ultérieure au millésime. 
      operationId: getAddedBuildings
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          #- application/zip
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnées xmin, ymin, xmax, ymax d'une BBOX séparées par une virgule. Limite de superficie de 10km². (Ex '1330000,7203000,1368000,7246000').  
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        description: code insee d'une commune de Rennes Métropole. 
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        description: Limite du nombre de résultats. 
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: date
        required: false
        description: Recherche par date (bâtiments ajoutés depuis la date passée en paramètre). Format "AAAA-MM-JJ".
        schema:
          format: date
          type: string
        #format: date
        #example : "2022-01-01"
      responses:
        "200":
          content:
            # application/zip:
            #   schema:
            #     type: object
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
          description: Données CityJSON ou CityGML sans texture.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Paramètre incorrect.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention des données 3D "bâtiments" ajoutés depuis le dernier millésime ou une date ultérieure
      tags:
      - Data
  /collections/modified_building/items:
    get:
      description: |-
        Récupération des données 3D des bâtiments modifiés depuis le dernier millésime du socle 3D. 
        Ces bâtiments ne disposent pas de texture. 
        Il est possible d'obtenir les bâtiments modifiés depuis une date ultérieure au millésime. 
      operationId: getModifiedBuildings
      parameters:
      - description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: application/json
          enum:
          #- application/zip
          - application/json
          - application/gml+xml;version=3.2
          type: string
        style: form
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnées xmin, ymin, xmax, ymax d'une BBOX séparées par une virgule. Limite de superficie de 10km². (Ex '1330000,7203000,1368000,7246000').  
        schema:
          type: string
        allowReserved: true
      - explode: true
        in: query
        name: codeInsee
        required: false
        description: code insee d'une commune de Rennes Métropole. 
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        description: Limite du nombre de résultats. 
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: date
        required: false
        description: Recherche par date (bâtiments modifiés depuis la date passée en paramètre). Format "AAAA-MM-JJ".
        schema:
          format: date
          type: string
        #format: date
        #example : "2022-01-01"
      responses:
        "200":
          content:
            # application/zip:
            #   schema:
            #     type: object
            application/json:
              schema:
                $ref: '#/components/schemas/Buildings'
            application/gml+xml;version=3.2:
              schema:
                type: object
          description: Données CityJSON ou CityGML sans texture.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Paramètre incorrect.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention des données 3D "bâtiments" modifiés depuis le dernier millésime ou une date ultérieure
      tags:
      - Data
  /collections/deleted_building/items:
    get:
      description: |-
        Récupération de la liste des bâtiments supprimés depuis le dernier millésime de la maquette 3D. 
      operationId: getDeletedBuildings
      parameters:
      - explode: true
        in: query
        name: codeInsee
        required: false
        description: code insee d'une commune de Rennes Métropole.
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        description: Limite du nombre de résultats. 
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: date
        required: false
        description: Recherche par date (bâtiments supprimés depuis la date passée en paramètre). Format "AAAA-MM-JJ".
        schema:
          format: date
          type: string
        #format: date
        #example : "2022-01-01"
      responses:
        "200":
          content:
            # application/zip:
            #   schema:
            #     type: object
            application/json:
              schema:
                $ref: '#/components/schemas/Deleted_Buildings'
            # application/gml+xml;version=3.2:
            #   schema:
            #     type: object
          description: Données JSON.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Paramètre incorrect.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention des identifiants des bâtiments modifiés depuis le dernier millésime ou une date ultérieure
      tags:
      - Data
  /collections/vegetation/items:
    get:
      description: |-
        Végétation théorique. 
        Les données retournées sont des points qu'il convient de représenter en 3D. Un catalogue de représentations est disponible sur la page "téléchargements" de l'API 3D.
      operationId: getVegetation
      parameters:
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnées xmin, ymin, xmax, ymax d'une BBOX séparées par une virgule. Limite de superficie de 10km². (Ex '1330000,7203000,1368000,7246000').  
        schema:
          type: string
        allowReserved: true
      # - explode: true
      #   in: query
      #   name: codeInsee
      #   required: false
      #   description: code insee d'une commune de Rennes Métropole. 
      #   schema:
      #     type: string
      #   style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vegetation'
          description: Données Json.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Paramètre incorrect.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention d'une couche de données ponctuelles permettant la représentation de la végétation théorique.
      tags:
      - Data
  /collections/mobilier/items:
    get:
      description: |-
        Mobilier urbain théorique. 
        Les données retournées sont des points qu'il convient de représenter en 3D. Un catalogue de représentations est disponible sur la page "téléchargements" de l'API 3D.
      operationId: getMobilier
      parameters:
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnées xmin, ymin, xmax, ymax d'une BBOX séparées par une virgule. Limite de superficie de 10km². (Ex '1330000,7203000,1368000,7246000').  
        schema:
          type: string
        allowReserved: true
      # - explode: true
      #   in: query
      #   name: codeInsee
      #   required: false
      #   description: code insee d'une commune de Rennes Métropole. 
      #   schema:
      #     type: string
      #   style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vegetation'
          description: Données Json.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Paramètre incorrect.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention d'une couche de données ponctuelles permettant la représentation du mobilier urbain théorique.
      tags:
      - Data
  /collections/mnt2018/coverage:
    get:
      description:  |-
        Obtention du Modèle Numérique de Terrain (MNT) qui permet de connaitre le relief du terrain.
        Il convient d'interpréter les niveaux de gris de l'image obtenue pour représenter le relief en 3D.
      operationId: getRaster
      parameters:
      - explode: true
        in: query
        name: bbox
        required: false
        description: coordonnées xmin, ymin, xmax, ymax d'une BBOX séparées par une virgule. Limite de superficie de 10km². (Ex '1330000,7203000,1368000,7246000').  
        schema:
          type: string
        allowReserved: true
      # - explode: true
      #   in: query
      #   name: codeInsee
      #   required: false
      #   description: code insee d'une commune de Rennes Métropole. 
      #   schema:
      #     type: string
      #   style: form
      responses:
        "200":
          content:
            image/tiff; application=geotiff:
              schema:
                format: binary
                type: string
          description: Raster geolocalisé en niveaux de gris.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Paramètre incorrect.
        "401":
          description: Utilisateur non authentifié
        "403":
          description: Access token does not have the required scope
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Réponse absente.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: Erreur du serveur rencontrée.
      summary: Obtention d'une partie du raster du Modèle Numérique de Terrain (MNT)
      tags:
      - Coverage
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: apiKey  # name of the header, query parameter or cookie
      description: Clé d'API publique et partagée <b> eyJ4NXQiOiJNREJsTTJRMVltRTRaREZrTldReE4yVTJZVEJpTkRreU5EUmxaV0l4TXpGak9ESXlNalF3TWc9PSIsImtpZCI6ImdhdGV3YXlfY2VydGlmaWNhdGVfYWxpYXMiLCJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhcHBtYW5hZ2VyQGNhcmJvbi5zdXBlciIsImFwcGxpY2F0aW9uIjp7Im93bmVyIjoiYXBwbWFuYWdlciIsInRpZXJRdW90YVR5cGUiOm51bGwsInRpZXIiOiI1MFBlck1pbiIsIm5hbWUiOiJwdWJsaXF1ZSIsImlkIjoxNDEsInV1aWQiOiJhYjU2NzA1Yi05M2RjLTQzYjEtOTQyMC1lZDJmYzUxOGQxZGQifSwiaXNzIjoiaHR0cHM6XC9cL2FwaW1hbmFnZXIuc2kucmVubmVzLmZyXC9vYXV0aDJcL3Rva2VuIiwidGllckluZm8iOnsiUHVibGlxdWVfZmFpYmxlIjp7InRpZXJRdW90YVR5cGUiOiJyZXF1ZXN0Q291bnQiLCJncmFwaFFMTWF4Q29tcGxleGl0eSI6MCwiZ3JhcGhRTE1heERlcHRoIjowLCJzdG9wT25RdW90YVJlYWNoIjp0cnVlLCJzcGlrZUFycmVzdExpbWl0IjowLCJzcGlrZUFycmVzdFVuaXQiOiJzZWMifX0sImtleXR5cGUiOiJQUk9EVUNUSU9OIiwicGVybWl0dGVkUmVmZXJlciI6IiIsInN1YnNjcmliZWRBUElzIjpbeyJzdWJzY3JpYmVyVGVuYW50RG9tYWluIjoiY2FyYm9uLnN1cGVyIiwibmFtZSI6IjNkIiwiY29udGV4dCI6IlwvM2RcL3YxIiwicHVibGlzaGVyIjoiZy50YXNzZXQiLCJ2ZXJzaW9uIjoidjEiLCJzdWJzY3JpcHRpb25UaWVyIjoiUHVibGlxdWVfZmFpYmxlIn0seyJzdWJzY3JpYmVyVGVuYW50RG9tYWluIjoiY2FyYm9uLnN1cGVyIiwibmFtZSI6IjNkLXRlc3QiLCJjb250ZXh0IjoiXC8zZC10ZXN0XC92MSIsInB1Ymxpc2hlciI6ImcudGFzc2V0IiwidmVyc2lvbiI6InYxIiwic3Vic2NyaXB0aW9uVGllciI6IlB1YmxpcXVlX2ZhaWJsZSJ9LHsic3Vic2NyaWJlclRlbmFudERvbWFpbiI6ImNhcmJvbi5zdXBlciIsIm5hbWUiOiJydmF0ZXN0IiwiY29udGV4dCI6IlwvcnZhLXRlc3RcL3YyIiwicHVibGlzaGVyIjoiZy50YXNzZXQiLCJ2ZXJzaW9uIjoidjIiLCJzdWJzY3JpcHRpb25UaWVyIjoiUHVibGlxdWVfZmFpYmxlIn1dLCJ0b2tlbl90eXBlIjoiYXBpS2V5IiwicGVybWl0dGVkSVAiOiIiLCJpYXQiOjE2NzU0MzMzOTIsImp0aSI6IjA2NzEyMWIxLWQ3NjItNDU4Ny04YzQ2LTJlMmEwMmQwZDc3OCJ9.JnDoqBRz39NvSAYJKgjlQI2-eItm95FYf_5yOk5LEwy9C8CNPHnv7oS3OR1x7lH4mCmll1X7czwIX21jsjRR7zD-HNzJlNOkishlxUWOETfaPJk4DVQoDBxvQTmvvdhdm4euE10wdSULzClc3fqRMO9Ocfx5pgX3xPK6Bv_hpghd7lekd91Q2KqcjfBaDp_aN6XlAQqF7j0O15yvtNVGrtbDPovRHLWxrNABX-HPZ7QwQaZxhFnKBohB4uys-eivsFR4-WeGHjs3-iW_hFqXXmOvr7zhWlJWSD7E7jnMF8hgBrLI8Oe2ZTKOfibf6itXwbQxuIai6owV3PQNecnA-w== </b>
  parameters:
    f:
      description: Optionnel, le paramètre f permet de choisir le format de sortie. JSON si non renseigné.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: application/json
        enum:
        - application/json
        - application/gml+xml;version=3.2
        type: string
      style: form
    bbox:
      explode: true
      in: query
      name: bbox
      required: false
      description: coordonnées xmin, ymin, xmax, ymax d'une BBOX séparées par une virgule. Limite de superficie de 10km². (Ex '1330000,7203000,1368000,7246000').  
      schema:
        type: string
      allowReserved: true
    codeInsee:
      explode: true
      in: query
      name: codeInsee
      required: false
      description: code insee d'une commune de Rennes Métropole. 
      schema:
        type: string
      style: form
    limit:
      explode: true
      in: query
      name: limit
      required: false
      description: Limite du nombre de résultats. 
      schema:
        type: integer
      style: form
    startIndex:
      explode: true
      in: query
      name: startIndex
      required: false
      schema:
        type: integer
      style: form
    buildingID:
      description: Identifiant du bâtiment
      explode: false
      in: path
      name: buildingID
      required: true
      schema:
        type: string
      style: simple
    date:
      description: Date au format "AAAA-MM-JJ"
      explode: false
      in: path
      name: date
      required: true
      schema:
        format: date
        type: string
      #example: "2020-01-01"
      style: simple

  responses:
    MapTile:
      content:
        image/tiff; application=geotiff:
          schema:
            format: binary
            type: string
      description: Fichier image geolocalisé.
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: Paramètre incorrect.
    "401":
      description: Utilisateur non authentifié
    "403":
      description: Access token does not have the required scope
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: Réponse absente.
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
      description: Erreur du serveur rencontrée.
    LandingPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
      description: |-
        La page d'accueil fournit des liens vers les définitions de l'API (relations `service-desc` et `service-doc`) 
        et les déclaration de conformité (chemin `/conformance`, relation `conformance`).
    ConformanceDeclaration:
      content:
        application/json:
          example:
            conformsTo:
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landingPage
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
            - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
          schema:
            $ref: '#/components/schemas/confClasses'
        text/html:
          schema:
            type: string
      description: |-
        Les URIs des classes des standards supportés par le serveur.
        Déclarations de conformités du serveur aux standards qu'il implémente dans le but de se rendre au mieux interopérable par le standard OGC API Features.
    Collections:
      content:
        application/json:
          example:
            links:
            - href: http://data.example.org/collections.json
              rel: self
              type: application/json
              title: this document
            - href: http://data.example.org/collections.html
              rel: alternate
              type: text/html
              title: this document as HTML
            - href: http://schemas.example.org/1.0/buildings.xsd
              rel: describedBy
              type: application/xml
              title: GML application schema for Acme Corporation building data
            - href: http://download.example.org/buildings.gpkg
              rel: enclosure
              type: application/geopackage+sqlite3
              title: Bulk download (GeoPackage)
              length: 472546
            collections:
            - id: buildings
              title: Buildings
              description: Buildings in the city of Bonn.
              links:
              - href: http://data.example.org/collections/buildings/items
                rel: items
                type: application/geo+json
                title: Buildings
              - href: http://data.example.org/collections/buildings/items.html
                rel: items
                type: text/html
                title: Buildings
              - href: https://creativecommons.org/publicdomain/zero/1.0/
                rel: license
                type: text/html
                title: CC0-1.0
              - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                rel: license
                type: application/rdf+xml
                title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string
      description: |-
        Description des jeux de données accessibles par cette API.

        Cette route permet d'obtenir les informations et les méthodes d'accès aux différents jeux de données (collection) fournies par l'API.
        La réponse présente une liste de jeux de données et pour chacun, leur description et leurs liens d'accès (chemin `/collections/{collectionId}/items`,
        liens de relation `items`).

        Cette information comprend : 
        * L'identifiant (id) du jeu de données qui est unique dans le catalogue;
        * Le titre (title) du jeu de données
        * Une description (description) du jeu de données
        * Le format de sortie (type)
    Collection:
      content:
        application/json:
          example:
            id: buildings
            title: Buildings
            description: Buildings in the city of Bonn.
            links:
            - href: http://data.example.org/collections/buildings/items
              rel: items
              type: application/geo+json
              title: Buildings
            - href: http://data.example.org/collections/buildings/items.html
              rel: items
              type: text/html
              title: Buildings
            - href: https://creativecommons.org/publicdomain/zero/1.0/
              rel: license
              type: text/html
              title: CC0-1.0
            - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
              rel: license
              type: application/rdf+xml
              title: CC0-1.0
          schema:
            $ref: '#/components/schemas/collection'
        text/html:
          schema:
            type: string
      description: |-
        Information about the feature collection with id `collectionId`.

        The response contains a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`)
        as well as key information about the collection. This information
        includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
    Buildings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Buildings'
        application/gml+xml;version=3.2:
          schema:
            type: object
      description: Reponse au format CityJson
  schemas:
    collection:
      example:
        itemType: feature
        crs:
        - http://www.opengis.net/def/crs/OGC/1.3/CRS84
        - http://www.opengis.net/def/crs/EPSG/0/4326
        description: An address.
        links:
        - href: http://data.example.com/buildings
          rel: item
        - href: http://example.com/concepts/buildings.html
          rel: describedBy
          type: text/html
        id: address
        title: address
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          example: address
          type: string
        title:
          description: human readable title of the collection
          example: address
          type: string
        description:
          description: a description of the features in the collection
          example: An address.
          type: string
        links:
          example:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          items:
            $ref: '#/components/schemas/link'
          type: array
        itemType:
          default: feature
          description: indicator about the type of the items in the collection (the
            default value is 'feature').
          type: string
        crs:
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: the list of coordinate reference systems supported by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            format: uri;
            type: string
          type: array
      required:
      - id
      - links
      type: object
    collections:
      example:
        collections:
        - itemType: feature
          crs:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          description: An address.
          links:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          id: address
          title: address
        - itemType: feature
          crs:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          description: An address.
          links:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          id: address
          title: address
        crs:
        - http://www.opengis.net/def/crs/OGC/1.3/CRS84
        - http://www.opengis.net/def/crs/EPSG/0/4326
        links:
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
      properties:
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
        collections:
          items:
            $ref: '#/components/schemas/collection'
          type: array
        crs:
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: a list of CRS identifiers that are supported for more that
            one feature collection offered by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            format: uri
            type: string
          type: array
      required:
      - collections
      - links
      type: object
    landingPage:
      example:
        description: description
        links:
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        - hreflang: en
          rel: alternate
          length: 0
          href: http://data.example.com/buildings/123
          type: application/json
          title: Trierer Strasse 70, 53115 Bonn
        title: Buildings in Bonn
      properties:
        title:
          example: Buildings in Bonn
          type: string
        description:
          type: string
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
      - links
      type: object
    link:
      example:
        hreflang: en
        rel: alternate
        length: 0
        href: http://data.example.com/buildings/123
        type: application/json
        title: Trierer Strasse 70, 53115 Bonn
      properties:
        href:
          example: http://data.example.com/buildings/123
          type: string
        rel:
          example: alternate
          type: string
        type:
          example: application/json
          type: string
        hreflang:
          example: en
          type: string
        title:
          example: Trierer Strasse 70, 53115 Bonn
          type: string
        length:
          type: integer
      required:
      - href
      - rel
      type: object
    exception:
      description: 'Information about the exception: an error code plus an optional
        description.'
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      type: object
    confClasses:
      example:
        conformsTo:
        - conformsTo
        - conformsTo
      properties:
        conformsTo:
          items:
            type: string
          type: array
      required:
      - conformsTo
      type: object
    Buildings:
      example:
        transform:
          scale:
          - 0.8008281904610115
          - 0.8008281904610115
          translate:
          - 6.027456183070403
          - 6.027456183070403
        metadata:
          presentLoDs:
            "2": 2
          referenceSystem: referenceSystem
        appearance:
          textures:
          - image: image
            borderColor:
            - 5
            - 5
            wrapMode: wrapMode
            textureType: textureType
            type: type
          - image: image
            borderColor:
            - 5
            - 5
            wrapMode: wrapMode
            textureType: textureType
            type: type
          vertices-texture:
          - - 5.637376656633329
            - 5.637376656633329
          - - 5.637376656633329
            - 5.637376656633329
        vertices:
        - - 1
          - 1
        - - 1
          - 1
        type: type
        version: version
        CityObjects: '{}'
      properties:
        type:
          type: string
        version:
          type: string
        CityObjects:
          type: object
        transform:
          $ref: '#/components/schemas/Buildings_transform'
        vertices:
          items:
            items:
              format: int32
              type: integer
            type: array
          type: array
        appearance:
          $ref: '#/components/schemas/Buildings_appearance'
        metadata:
          $ref: '#/components/schemas/Buildings_metadata'
      type: object
    Buildings_transform:
      example:
        scale:
        - 0.8008281904610115
        - 0.8008281904610115
        translate:
        - 6.027456183070403
        - 6.027456183070403
      properties:
        scale:
          items:
            type: number
          type: array
        translate:
          items:
            type: number
          type: array
      type: object
    Buildings_appearance_textures:
      example:
        image: image
        borderColor:
        - 5
        - 5
        wrapMode: wrapMode
        textureType: textureType
        type: type
      properties:
        type:
          type: string
        image:
          type: string
        wrapMode:
          type: string
        textureType:
          type: string
        borderColor:
          items:
            format: int32
            type: integer
          type: array
      type: object
    Buildings_appearance:
      example:
        textures:
        - image: image
          borderColor:
          - 5
          - 5
          wrapMode: wrapMode
          textureType: textureType
          type: type
        - image: image
          borderColor:
          - 5
          - 5
          wrapMode: wrapMode
          textureType: textureType
          type: type
        vertices-texture:
        - - 5.637376656633329
          - 5.637376656633329
        - - 5.637376656633329
          - 5.637376656633329
      properties:
        textures:
          items:
            $ref: '#/components/schemas/Buildings_appearance_textures'
          type: array
        vertices-texture:
          items:
            items:
              type: number
            type: array
          type: array
      type: object
    Buildings_metadata_presentLoDs:
      example:
        "2": 2
      properties:
        "2":
          format: int32
          type: integer
      type: object
    Buildings_metadata:
      example:
        presentLoDs:
          "2": 2
        referenceSystem: referenceSystem
      properties:
        referenceSystem:
          type: string
        presentLoDs:
          $ref: '#/components/schemas/Buildings_metadata_presentLoDs'
      type: object
    Deleted_Buildings:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
      example:
      - id: '350001_050218'
        date: '2022-08-03'
      - id: '350001_050344'
        date: '2022-08-02'
    Vegetation:
      example:
        type: FeatureCollection
        feature:
          type: Feature
          id: arbres.6145
          geometry:
            type: Point
            coordinantes:
              -1360553.054598
              -7228097.547001
          geometry_name: geom
          properties:
            id: 6145
            type: 1
            facteur: "12.55496 12.55496 24.01666"
            orientation: 45
            altitude: 83.7
          bbox:
            -1360553.054598
            -7228097.547001
            -1360553.054598
            -7228097.547001
        totalFeatures: 2448284
        numberMatched: 2448284
        numberReturned: 1
        timeStamp: "2022-10-07T10:06:24.001Z"
        crs:
          type: name
          properties:
            name: "urn:ogc:def:crs:EPSG::3948"
        bbox: 
          -1360553.054598
          -7228060.155101
          -1360678.159198
          -7228097.547001

